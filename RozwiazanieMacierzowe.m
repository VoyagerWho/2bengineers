close all; clear; clc;

points = [...
    10.0, 30.0;...    
    15.0, 31.414;...
    20.0, 32.0;...
    25.0, 31.414;...
    30.0, 30.0;...
    28.914, 35.707;...
    23.086, 36.707;...
    16.914, 36.707;...
    11.086, 35.707;...
];

n = length(points);

points

elements = [...
    1, 2;...
    2, 3;...
    3, 4;...
    4, 5;...
    5, 6;...
    4, 6;...
    4, 7;...
    3, 7;...
    3, 8;...
    2, 8;...
    2, 9;...
    1, 9;...
    8, 9;...
    7, 8;...
    6, 7;...
];

m = size(elements);
m = m(1);

e = [...
    2.7e10;...
    2.7e10;...
    2.7e10;...
    2.7e10;...
    2e11;...
    2e11;...
    2e11;...
    2e11;...
    2e11;...
    2e11;...
    2e11;...
    2e11;...
    2e11;...
    2e11;...
    2e11;...
]; 

a = [...
    0.75;...
    0.75;...
    0.75;...
    0.75;...
    0.021875;...
    0.021875;...
    0.021875;...
    0.021875;...
    0.021875;...
    0.021875;...
    0.021875;...
    0.021875;...
    0.021875;...
    0.021875;...
    0.021875;...
]; 

den = [...
    1020;...
    1020;...
    1020;...
    1020;...
    7750;...
    7750;...
    7750;...
    7750;...
    7750;...
    7750;...
    7750;...
    7750;...
    7750;...
    7750;...
    7750;...
];

lengths = zeros(m, 1);
forces = zeros(2*n, 1);

i=1;
for el = elements'
    lengths(i) = dist12(points(el(1),:), points(el(2),:));
    force = lengths(i)*den(i)*-9.81*a(i);
    forces(2*el(1)) = forces(2*el(1)) + force/2;
    forces(2*el(2)) = forces(2*el(2)) + force/2;
    i=i+1;
end

forces([2, 10]) = 0;

lengths
forces

csmat = zeros(m, 2);

i=1;
for el = elements'
    csmat(i,:) = (points(el(2),:)-points(el(1),:))/lengths(i);
    i=i+1;
end

csmat

kmat = zeros(4, 4, m);

for i = 1:m
    kmat(:, :, i) = ekmat(csmat(i,:));
end

kplmat = zeros(4, 4, m);
for i = 1:m
    kplmat(:, :, i) = kmat(:, :, i).*(a(i)*e(i)/lengths(i));
end

k = zeros(2*n);
i=1;
for el = elements'
    u = 2*el(1);
    v = 2*el(2);
    kpl = kplmat(:,:, i);
    k(u-1:u, u-1:u) = k(u-1:u, u-1:u)+kpl(1:2, 1:2);
    k(u-1:u, v-1:v) = k(u-1:u, v-1:v)+kpl(1:2, 3:4); 
    k(v-1:v, u-1:u) = k(v-1:v, u-1:u)+kpl(3:4, 1:2); 
    k(v-1:v, v-1:v) = k(v-1:v, v-1:v)+kpl(3:4, 3:4);
    i=i+1;
end


bc = [1, 2, 9, 10];

for el = bc
    k(el, :) = zeros(1, 2*n);
    k(:, el) = zeros(2*n, 1);
    k(el,el) = 1;
end

f = forces;
% dodatkowe obciazenie
f(8) = f(8)-147150;

f

d = k^-1*f;

d

%skalowanie wynikow
powers = -round(log10(abs(d)));
dp = d*5*10^(min(powers(~isinf(powers))));
dpx = dp(1:2:2*n-1);
dpy = dp(2:2:2*n);

dpp = [dpx,dpy];
pointsp = points + dpp;

strains = zeros(m,1);
i=1;
for el = elements'
    dl = csmat(i, 1)*(d(2*el(2)-1)-d(2*el(1)-1))...
        +csmat(i, 2)*(d(2*el(2))-d(2*el(1)));
    strains(i) = e(i)*dl/lengths(i);
    i=i+1;
end

strains

A = zeros(n);

i=1;
for el = elements'
    A(el(1), el(2)) = strains(i);
    A(el(2), el(1)) = strains(i);
    i=i+1;
end


% wyswietlanie wynikow
bridge = graph(A);

plot(points(:,1), points(:, 2), 'k.');
hold on;
plot(bridge, 'EdgeLabel', bridge.Edges.Weight, 'XData', pointsp(:, 1), 'YData', pointsp(:, 2));
axis equal;
hold off;
% 

function l = dist12(p1, p2)
    l = sqrt(dot(p2-p1, p2-p1));
end

function km = ekmat(cs)
    b = [-cs(1); -cs(2); cs(1); cs(2)];
    km = b*b.';
end